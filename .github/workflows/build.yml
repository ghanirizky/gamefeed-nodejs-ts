name: build

on:
  push:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 19.x]
    steps:
    -
      name: Checkout latest commit
      uses: actions/checkout@v2
    -
      name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    -
      name: Installing dependencies
      run: npm ci
      env:
        CI: "true"
    -
      name: Show installed packages
      run: npm list --depth=0
      env:
        CI: "true"
    -
      name: Check Typescript version
      run: tsc --version
    -
      name: Build Bot
      run: npm run build
      env:
        CI: "true"

  dockerize:
    needs: [test]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip build]') && contains(github.ref, 'refs/heads/master')"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push images
        id: docker_build
        uses: docker/build-push-action@v2.4.0
        with:
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest
          build-args: |
            BOT_VERSION=${{ steps.vars.outputs.sha_short }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: [test, dockerize]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip deploy]') && contains(github.ref, 'refs/heads/master')"
    steps:
      -
        name: Connecting to server & Start deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{secrets.SSH_HOST}}
          port: ${{ secrets.SSH_PORT}}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            "cd /"
            "./home/ghani/gamefeed/build.sh"